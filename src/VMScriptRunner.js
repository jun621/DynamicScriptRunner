/* the following code triggers a script run in a VM instance (EC2)
via Dynamo DB event */

const AWS = require('aws-sdk');
const fs  = require('fs');
const {nanoid} = require('nanoid');

// Configure AWS SDK
AWS.config.update({ region: 'us-west-1' });

const dynamodb = new AWS.DynamoDB() ;
const s3 = new AWS.S3();

const TableName= 'DynamicTable' ;
const inputFile = 'Archive.zip';
const outputFile = 'output.txt' ;
const BucketName = 'fullstackjun' ;

const id = nanoid();

// retrieve the inputs from DynamoDB via autogenerated ID
const retrieveInput =() =>{
const params  = {
    TableName : TableName ,
    Key : {
      id : {S :id}
    },
}};

dynamodb.getItem(params,(err, data)=> {
  if (err) {
    console.error('error occurred while downloading inputs from DynamoDB', err) ;
  }else {
  const input = data.Item.Archive.zip.S;
    console.log('Successfully downloaded the inputs from DynamoDB ', data) ;
    downloadFile();
  }
  });

  // Downloading inputFile from S3
   const downloadFile = () => {
     const params = {
        BucketName : bucketName,
        Key: inputFile
     };


  const file = fs.createWriteStream(inputFile);

  s3.getObject(params)
    .createReadStream()
    .on('error', (err) => {
     console.error('error downloading inputFile from S3 to Vm', err);
    })
    .pipe(file)
    .on('finish', () => {
     console.log('Successfully downloaded inputFile from S3 ') ;
     appendInputTextFile();
    });

  };
  // append retrieved input text to inputFile
  const appendInputTextFile = () => {

   dynamodb.getItem(
   {

    TableName : TableName,
    key: {
      id :{S :id},
      },
    }   ,
    (err,data) =>{
      if (err) {
       console.error('Unable to retrieve inputs from DynamoDB',err) ;
      }else{
        const input = data.Item.input_text.S ;
        fs.appendFile(outputFile,'retrieved File', (err) => {
          if (err){
            console.error('Error appending text to inputFile', err);
         } else {
           console.log('Input text appended to outputFile', outputFile);
           // upload the outputFile to S3
           uploadOutputFile();
         }
        });
        }
      }
     );
 };
















